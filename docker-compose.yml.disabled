services:
  api:
    container_name: spr_pericia_api
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules # Impede que node_modules locais sobrescrevam os do contêiner
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: spr_pericia_db
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_USE_SSL: 'false'
      MINIO_BUCKET: 'spr-pericia'
    # ==========================================================
    # CORREÇÃO 1: Adicionado o 'minio' à lista de dependências saudáveis.
    # A 'api' agora esperará tanto pelo 'postgres' quanto pelo 'minio'.
    # ==========================================================
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  postgres:
    image: postgres:14-alpine
    container_name: spr_pericia_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: spr_pericia_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d spr_pericia_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: spr_pericia_minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    # ==========================================================
    # CORREÇÃO 2: Adicionado um 'healthcheck' para o MinIO.
    # Isso permite que o Docker saiba quando o serviço está pronto.
    # O comando 'mc ready local' verifica a saúde do alias padrão 'local'.
    # ==========================================================
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  minio_data: